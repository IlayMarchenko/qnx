// -*- C++ -*-
//===--------------------------- csetjmp ----------------------------------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is dual licensed under the MIT and the University of Illinois Open
// Source Licenses. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCPP_CSETJMP
#define _LIBCPP_CSETJMP

/*
    csetjmp synopsis

Macros:

    setjmp

namespace std
{

Types:

    jmp_buf

void longjmp(jmp_buf env, int val);

}  // std

*/

#include <__config>
#include <setjmp.h>

#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
#pragma GCC system_header
#endif

#ifndef setjmp
#define setjmp(env) setjmp(env)
#endif

#if defined(__QNXNTO__) && defined(longjmp)
_LIBCPP_ALWAYS_INLINE _LIBCPP_NORETURN
void
__libcpp_longjmp(jmp_buf __env, int __val)
{
    return longjmp(__env, __val);
}

#undef longjmp

inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_NORETURN
void
longjmp(jmp_buf __env, int __val)
{
    return __libcpp_longjmp(__env, __val);
}
#endif

_LIBCPP_BEGIN_NAMESPACE_STD

using ::jmp_buf;
using ::longjmp;

_LIBCPP_END_NAMESPACE_STD

#endif  // _LIBCPP_CSETJMP
