[audio_type]                                # section defining an audio type
name=voice                                  # audio type name string
prio=same                                   # priority directive of the audio type, possible value is "same" or "decr"
duck_same_prio_policy=last_wins             # ducking policy of same priority type, possible value is "last_wins", "first_wins", "mix"
duck_same_prio_percent=0                    # ducking percentage applied to same priority audio types
duck_lower_prio_percent=0                   # ducking percentage applied to lower priority audio types

[audio_type]
name=ringtone
prio=decr                                   # priority of the audio type is decreased by one from previous audio type
duck_same_prio_policy=last_wins             # last active audio stream can duck previous audio streams of same priority
duck_same_prio_percent=50                   # all channels of active streams at the same priority level are ducked to 50 percent
duck_lower_prio_percent=50                  # all channels of active streams at lower priority levels are ducked to 50 percent

[audio_type]
name=nav
prio=decr
duck_same_prio_policy=last_wins
duck_same_prio_percent=ch0:50,ch1:100       # Channel/Voice 0 ducked to 50 percent, Channel/Voice 1 remains at 100 percent
duck_lower_prio_percent=ch0:50,ch1:100      # Ducking values will default to 100 (no ducking) for channels not listed

[audio_type]
name=tts_front
prio=decr
duck_same_prio_policy=last_wins
duck_same_prio_percent=80
duck_lower_prio_percent=80

[audio_type]
name=tts_back
prio=same                                   # priority of the audio type is the same as the previously defined type
duck_same_prio_policy=last_wins
duck_same_prio_percent=0
duck_lower_prio_percent=50

# To allow games and media to play concurrently define the game type one above media with duck_lower_prio_percent=100/noducking
# Note: This means that if there are other lower priority types defined they will also not be ducked by the game type.
[audio_type]
name=game
prio=decr
duck_same_prio_policy=mix                   # Mix audio streams at same priority with the below ducking configuration
duck_same_prio_percent=100                  # 100 percent == no ducking
duck_lower_prio_percent=noducking

# Live media is not pausable, so preemption is not enabled
[audio_type]
name=live_multimedia
prio=decr
duck_same_prio_policy=last_wins
duck_same_prio_percent=0
duck_lower_prio_percent=70

# The only difference between the live_multimeida and multimedia types is that multimedia is pausable so preemption is enabled
[audio_type]
name=multimedia
prio=same
duck_same_prio_policy=last_wins
duck_same_prio_percent=0
duck_lower_prio_percent=70
preemption_by_higher=suspend                # Audio stream will be suspended when ducked to 0 percent by higher priority types
preemption_by_same=pause                    # Audio stream will be paused when ducked to 0 percent by same priroity types

[audio_type]
name=default
prio=decr
duck_same_prio_policy=mix                   # Mix audio streams at same priority with the below ducking configuration
duck_same_prio_percent=100                  # 100 percent == no ducking
duck_lower_prio_percent=noducking
preemption_by_higher=suspend                # Audio stream will be suspended when ducked to 0 percent by higher priority types

[vol_ramp]
name=volume_mute
duration=20                                 #default duration, when indicated as 0 in the group request
profile=20:10,60:80,20:10                   #if not specified, the default profile is one linear segment

[vol_ramp]
name=pause_resume
duration=20

[vol_ramp]
name=ducking
duration=20
